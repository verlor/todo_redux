{"version":3,"sources":["components/TodoTextInput.js","components/Header.js","api/apiUtils.js","api/courseApi.js","actions/index.js","constants/ActionTypes.js","containers/Header.js","components/Link.js","containers/FilterLink.js","components/Footer.js","constants/TodoFilters.js","components/TodoItem.js","components/TodoList.js","selectors/index.js","containers/VisibleTodoList.js","components/MainSection.js","containers/MainSection.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["TodoTextInput","state","text","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","className","classnames","edit","this","editing","type","placeholder","autoFocus","onBlur","onChange","onKeyDown","Component","Header","postTask","length","handleResponse","response","a","ok","json","status","error","Error","handleError","console","process","API_URL","callUpdateTask","task","fetch","id","method","headers","body","JSON","stringify","callDeleteTask","taskId","loadTasks","tasks","addTodo","deleteTodo","editTodo","completeTodo","completeAllTodos","clearCompleted","setVisibilityFilter","filter","deleteTask","dispatch","courseApi","then","mimeType","results","location","get","newId","substr","indexOf","completed","parseInt","loadCourses","catch","connect","Link","active","children","setFilter","selected","style","cursor","onClick","ownProps","visibilityFilter","FILTER_TITLES","Footer","activeCount","completedCount","onClearCompleted","itemWord","Object","keys","map","key","FilterLink","TodoItem","handleDoubleClick","handleSave","element","todo","checked","onDoubleClick","TodoList","filteredTodos","actions","useEffect","getTodos","todos","getVisibleTodos","createSelector","t","getCompletedTodoCount","reduce","count","VisibleTodoList","bindActionCreators","TodoActions","MainSection","todosCount","readOnly","App","initialState","action","rootReducer","combineReducers","concat","areAllMarked","every","compEnh","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f6a0b1c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool\n  }\n\n  state = {\n    text: this.props.text || ''\n  }\n\n  handleSubmit = e => {\n    const text = e.target.value.trim()\n    if (e.which === 13) {\n      this.props.onSave(text)\n      if (this.props.newTodo) {\n        this.setState({ text: '' })\n      }\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ text: e.target.value })\n  }\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value)\n    }\n  }\n\n  render() {\n    return (\n      <input className={\n        classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus={true}\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit} />\n    )\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TodoTextInput from './TodoTextInput'\n\nconst Header = ({ postTask }) => (\n  <header className=\"header\">\n    <h1>todos</h1>\n    <TodoTextInput\n      newTodo\n      onSave={text => {\n        if (text.length !== 0) {\n          postTask({ text })\n        }\n      }}\n      placeholder=\"What needs to be done?\"\n    />\n  </header>\n)\n\nHeader.propTypes = {\n  postTask: PropTypes.func.isRequired\n}\n\nexport default Header\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from './apiUtils'\nconst baseUrl = process.env.API_URL + '/courses/'\nconst API_URL = 'http://neseiza.org/api/todos'\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError)\n}\n\nexport function getTasks() {\n  return fetch(API_URL)\n    .then(handleResponse)\n    .catch(handleError)\n}\n\nexport function saveTask(task) {\n  return fetch(API_URL, {\n    method: 'POST',\n    body: JSON.stringify(task),\n    headers: { 'content-type': 'application/json' },\n    mimeType: 'multipart/form-data'\n  })\n  //const content = await rawResponse\n  //return content.headers.get('Location')\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || ''), {\n    method: course.id ? 'PUT' : 'POST', // POST for create, PUT to update when id already exists.\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify(course)\n  })\n    .then(handleResponse)\n    .catch(handleError)\n}\n\nexport function callUpdateTask(task) {\n  return fetch(API_URL + '?id=eq.' + task.id, {\n    method: 'PUT',\n    headers: { 'content-type': 'application/json' },\n    body: JSON.stringify(task)\n  })\n}\n\nexport function callDeleteTask(taskId) {\n  return fetch(API_URL + '?id=eq.' + taskId, { method: 'DELETE' })\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: 'DELETE' })\n    .then(handleResponse)\n    .catch(handleError)\n}\n","import * as types from '../constants/ActionTypes'\nimport * as courseApi from '../api/courseApi'\n\nexport const loadTasks = tasks => ({ type: types.SET_ALL_TODOS, tasks })\nexport const addTodo = task => ({ type: types.ADD_TODO, task })\nexport const deleteTodo = id => ({ type: types.DELETE_TODO, id })\nexport const editTodo = (id, text) => ({ type: types.EDIT_TODO, id, text })\nexport const completeTodo = id => ({ type: types.COMPLETE_TODO, id })\nexport const completeAllTodos = () => ({ type: types.COMPLETE_ALL_TODOS })\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })\nexport const setVisibilityFilter = filter => ({\n  type: types.SET_VISIBILITY_FILTER,\n  filter\n})\n\n// Middleware thunk handled here\n\nexport function deleteTask(taskId) {\n  return function(dispatch) {\n    return courseApi.callDeleteTask(taskId).then(response => {\n      if (response.status === 204) {\n        dispatch(deleteTodo(taskId))\n      }\n    })\n  }\n}\n\nexport function postTask(task) {\n  return function(dispatch) {\n    return courseApi.saveTask(task).then(results => {\n      const location = results.headers.get('Location')\n      const newId = location.substr(location.indexOf('.') + 1)\n      dispatch(addTodo({ completed: false, id: parseInt(newId), ...task }))\n    })\n  }\n}\n\nexport function loadCourses() {\n  return function(dispatch) {\n    return courseApi\n      .getTasks()\n      .then(tasks => {\n        dispatch(loadTasks(tasks))\n      })\n      .catch(error => {\n        throw error\n      })\n  }\n}\n// ends thunk middleware\n","export const SET_ALL_TODOS = 'SET_ALL_TODOS'\nexport const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const COMPLETE_TODO = 'COMPLETE_TODO'\nexport const COMPLETE_ALL_TODOS = 'COMPLETE_ALL_TODOS'\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\n","import { connect } from 'react-redux'\nimport Header from '../components/Header'\nimport { postTask } from '../actions'\n\nexport default connect(null, { postTask })(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Link = ({ active, children, setFilter }) =>\n  (\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={classnames({ selected: active })}\n      style={{ cursor: 'pointer' }}\n      onClick={() => setFilter()}\n    >\n      {children}\n    </a>\n  )\n\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  setFilter: PropTypes.func.isRequired\n}\n\nexport default Link\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  setFilter: () => {\n    dispatch(setVisibilityFilter(ownProps.filter))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport FilterLink from '../containers/FilterLink'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst FILTER_TITLES = {\n  [SHOW_ALL]: 'All',\n  [SHOW_ACTIVE]: 'Active',\n  [SHOW_COMPLETED]: 'Completed'\n}\n\nconst Footer = (props) => {\n  const { activeCount, completedCount, onClearCompleted } = props\n  const itemWord = activeCount === 1 ? 'item' : 'items'\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong> {itemWord} left\n      </span>\n      <ul className=\"filters\">\n        {Object.keys(FILTER_TITLES).map(filter =>\n          <li key={filter}>\n            <FilterLink filter={filter}>\n              {FILTER_TITLES[filter]}\n            </FilterLink>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button\n          className=\"clear-completed\"\n          onClick={onClearCompleted}\n        >Clear completed</button>\n        \n      }\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  completedCount: PropTypes.number.isRequired,\n  activeCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n}\n\nexport default Footer\n","export const SHOW_ALL = 'show_all'\nexport const SHOW_COMPLETED = 'show_completed'\nexport const SHOW_ACTIVE = 'show_active'\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport TodoTextInput from './TodoTextInput'\n\nexport default class TodoItem extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    editTodo: PropTypes.func.isRequired,\n    deleteTodo: PropTypes.func.isRequired,\n    completeTodo: PropTypes.func.isRequired\n  }\n\n  state = {\n    editing: false\n  }\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true })\n  }\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(id)\n    } else {\n      this.props.editTodo(id, text)\n    }\n    this.setState({ editing: false })\n  }\n\n  render() {\n    const { todo, completeTodo, deleteTask } = this.props\n\n    let element\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={text => this.handleSave(todo.id, text)}\n        />\n      )\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo.id)}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => deleteTask(todo.id)} />\n        </div>\n      )\n    }\n\n    return (\n      <li\n        className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}\n      >\n        {element}\n      </li>\n    )\n  }\n}\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport TodoItem from './TodoItem'\n\nconst TodoList = ({ filteredTodos, actions }) => {\n  useEffect(() => {\n    actions.loadCourses().catch(error => {\n      throw error\n    })\n  }, [])\n\n  return (\n    <ul className=\"todo-list\">\n      {filteredTodos.map(todo => (\n        <TodoItem key={todo.id} todo={todo} {...actions} />\n      ))}\n    </ul>\n  )\n}\n\nTodoList.propTypes = {\n  filteredTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default TodoList\n","import { createSelector } from 'reselect'\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\n\nconst getVisibilityFilter = state => state.visibilityFilter\n\nconst getTodos = state => {\n  return state.todos\n}\n\nexport const getVisibleTodos = createSelector(\n  [getVisibilityFilter, getTodos],\n  (visibilityFilter, todos) => {\n    switch (visibilityFilter) {\n      case SHOW_ALL:\n        return todos\n      case SHOW_COMPLETED:\n        return todos.filter(t => t.completed)\n      case SHOW_ACTIVE:\n        return todos.filter(t => !t.completed)\n      default:\n        throw new Error('Unknown filter: ' + visibilityFilter)\n    }\n  }\n)\n\nexport const getCompletedTodoCount = createSelector([getTodos], todos =>\n  todos.reduce((count, todo) => (todo.completed ? count + 1 : count), 0)\n)\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as TodoActions from '../actions'\nimport TodoList from '../components/TodoList'\nimport { getVisibleTodos } from '../selectors'\n\nconst mapStateToProps = state => ({\n  filteredTodos: getVisibleTodos(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Footer from './Footer'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nconst MainSection = ({ todosCount, completedCount, actions }) =>\n  (\n    <section className=\"main\">\n      {\n        !!todosCount && \n        <span>\n          <input\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            checked={completedCount === todosCount}\n            readOnly\n          />\n          <label onClick={actions.completeAllTodos}/>\n        </span>\n      }\n      <VisibleTodoList />\n      {\n        !!todosCount &&\n        <Footer\n          completedCount={completedCount}\n          activeCount={todosCount - completedCount}\n          onClearCompleted={actions.clearCompleted}\n        />\n      }\n    </section>\n  )\n\nMainSection.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  actions: PropTypes.object.isRequired\n}\n\nexport default MainSection;","import { connect } from 'react-redux'\nimport * as TodoActions from '../actions'\nimport { bindActionCreators } from 'redux'\nimport MainSection from '../components/MainSection'\nimport { getCompletedTodoCount } from '../selectors'\n\n\nconst mapStateToProps = state => ({\n  todosCount: state.todos.length,\n  completedCount: getCompletedTodoCount(state)\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(TodoActions, dispatch)\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainSection)\n\n","import React from 'react'\nimport Header from '../containers/Header'\nimport MainSection from '../containers/MainSection'\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <MainSection />\n    </div>\n  )\n}\n\nexport default App\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  COMPLETE_ALL_TODOS,\n  CLEAR_COMPLETED,\n  SET_ALL_TODOS\n} from '../constants/ActionTypes'\n\nimport { callUpdateTask, callDeleteTask } from '../api/courseApi'\n\nconst initialState = []\n\nexport default function todos(state = initialState, action) {\n  switch (action.type) {\n    case SET_ALL_TODOS:\n      return state.concat(action.tasks)\n    case ADD_TODO:\n      return [...state, action.task]\n    case DELETE_TODO:\n      return state.filter(todo => todo.id !== action.id)\n\n    case EDIT_TODO:\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          const newTodo = { ...todo, text: action.text }\n          callUpdateTask(newTodo)\n          return newTodo\n        } else return todo\n      })\n\n    case COMPLETE_TODO:\n      return state.map(todo => {\n        if (todo.id === action.id) {\n          const newTodo = { ...todo, completed: !todo.completed }\n          callUpdateTask(newTodo)\n          return newTodo\n        } else return todo\n      })\n\n    case COMPLETE_ALL_TODOS:\n      const areAllMarked = state.every(todo => todo.completed)\n      return state.map(todo => {\n        const newTodo = {\n          ...todo,\n          completed: !areAllMarked\n        }\n        callUpdateTask(newTodo)\n        return newTodo\n      })\n\n    case CLEAR_COMPLETED:\n      state.map(todo => {\n        if (todo.completed === true) callDeleteTask(todo.id)\n      })\n      return state.filter(todo => todo.completed === false)\n\n    default:\n      return state\n  }\n}\n","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes'\nimport { SHOW_ALL } from '../constants/TodoFilters'\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nconst rootReducer = combineReducers({\n  todos,\n  visibilityFilter\n})\n\nexport default rootReducer\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport reducer from './reducers'\nimport 'todomvc-app-css/index.css'\nimport thunk from 'redux-thunk'\n\nconst compEnh = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, compEnh(applyMiddleware(thunk)))\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}